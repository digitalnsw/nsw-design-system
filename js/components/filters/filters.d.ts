export default Filters;
declare class Filters {
    static getMultiSelectValues(array: any): any[];
    static moveFocusFn(element: any): void;
    constructor(element: any);
    element: any;
    hideClass: string;
    showClass: string;
    openClass: string;
    prefix: string;
    class: string;
    controlsClass: string;
    wrapperClass: string;
    listClass: string;
    itemClass: string;
    resetClass: string;
    submitClass: string;
    closeClass: string;
    countClass: string;
    allClass: string;
    moreClass: string;
    count: any;
    controls: any;
    controlsButton: any;
    controlsButtonIcons: any;
    controlsButtonText: any;
    controlsButtonTextContent: any;
    wrapper: any;
    closeButton: any;
    submitButton: any;
    resetButton: any;
    items: any;
    accordionButtons: any;
    showMoreContent: any;
    showMoreButtons: any;
    focusableElements: string;
    selectedOption: any;
    buttons: any[];
    content: any[];
    options: any[];
    selected: any[];
    keydownHandler: ((event: any) => void) | null;
    init(): void;
    initEvents(): void;
    setAccordionState(element: any, state: any): void;
    toggleAccordion(event: any): void;
    getTargetContent(element: any): any;
    toggleSubmit(array: any): void;
    showMore(event: any, index: any): void;
    closeFilters(event: any): void;
    showFilters(event: any): void;
    clearAll(event: any): void;
    getOptions(): void;
    getSelected(): void;
    selectedCount(array: any): void;
    setSelectedState(): void;
    updateDom(): void;
    trapFocus(element: any): void;
}
