export default Carousel;
declare class Carousel extends SwipeContent {
    containerClass: string;
    controlClass: string;
    wrapperClass: string;
    counterClass: string;
    counterTotalClass: string;
    navClass: string;
    navItemClass: string;
    navigationItemClass: any;
    navigationClass: any;
    paginationClass: any;
    draggingClass: string;
    loadedClass: string;
    animateClass: string;
    cloneClass: string;
    srClass: string;
    srLiveAreaClass: string;
    hideControlsClass: string;
    hideClass: string;
    centerClass: string;
    listWrapper: any;
    list: any;
    items: any;
    controls: any;
    counter: any;
    counterTotal: any;
    ariaLabel: any;
    dragEnabled: boolean;
    loop: boolean;
    nav: boolean;
    navigationPagination: boolean;
    justifyContent: boolean;
    initItems: any[];
    itemsNb: any;
    visibItemsNb: number;
    itemsWidth: number;
    itemOriginalWidth: boolean;
    selectedItem: number;
    translateContainer: number;
    containerWidth: number;
    animating: boolean;
    dragStart: boolean;
    resizeId: boolean;
    cloneList: any[];
    itemAutoSize: boolean;
    totTranslate: number;
    flexSupported: boolean;
    transitionSupported: boolean;
    cssPropertiesSupported: boolean;
    initCarouselLayout(): void;
    carouselCreateContainer(): void;
    setItemsWidth(bool: any): void;
    updateCarouselClones(): void;
    initCarouselEvents(): void;
    showPrevItems(): void;
    showNextItems(): void;
    animateDragEnd(): void;
    animateList(translate: any, direction: any): void;
    noLoopTranslateValue(direction: any): string;
    animateListCb(direction: any): void;
    updateClones(direction: any): void;
    insertBefore(nb: any, delta: any): void;
    insertAfter(nb: any, init: any): void;
    removeClones(index: any, bool: any): void;
    resetCarouselResize(): void;
    resetItemAutoSize(): void;
    resetItemsWidth(): void;
    resetItemsTabIndex(): void;
    initAriaLive(): void;
    ariaLive: HTMLDivElement | undefined;
    updateAriaLive(): void;
    getIndex(index: any): any;
    getPositiveValue(value: any, add: any): any;
    setTranslate(translate: any): void;
    getCarouselWidth(computedWidth: any): any;
    getHiddenParentWidth(element: any): any;
    resetCarouselControls(): void;
    emitCarouselUpdateEvent(): void;
    carouselCreateNavigation(): void;
    carouselInitNavigationEvents(): void;
    navigation: any;
    navDots: any;
    navIdEvent: ((event: any) => void) | undefined;
    carouselRemoveNavigation(): void;
    resetDotsNavigation(): void;
    carouselNavigationClick(event: any): void;
    selectedDotIndex: number | undefined;
    getSelectedDot(): number;
    initCarouselCounter(): void;
    setCounterItem(): void;
    centerItems(): void;
    emitCarouselActiveItemsEvent(): void;
    emitCarouselEvents(eventName: any, eventDetail: any): void;
    resetVisibilityOverflowItems(j: any): void;
}
import SwipeContent from './swipe-content';
