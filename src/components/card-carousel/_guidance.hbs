---
title: Card carousel
layout: blank-layout.hbs
---

<h2>Usage</h2>

<p>The card carousel component displays four or more related cards within a limited space, allowing users to scroll through them via arrows, navigation buttons, or swiping gestures on a touchscreen.</p>

<p>Use a card carousel component:</p>

<ul>
  <li>when you have limited screen space but need to display multiple cards with related content.</li>
  <li>with a clear and relevant title, to help users understand the content or purpose better.</li>
  <li>to display feature articles, blog posts, news updates or any sequential content, allowing users to browse through the latest updates easily.</li>
  <li>to guide users through a step-by-step process or tutorial by displaying three cards at a time.</li>
  <li>to display multiple categories or options, making it easier for users to navigate through different sections without cluttering the screen.</li>
</ul>

<h3>When to avoid</h3>

<p>It's essential to implement card carousels thoughtfully to ensure they genuinely enhance user experience.</p>

<p>Do not:</p>

<ul>
  <li>use multiple card carousels on one page. Use carousels sparingly and strategically. Overuse can lead to banner blindness or user frustration.</li>
  <li>use for unrelated items. The content in the carousel should be related in some way. This helps users to find related and relevant content.</li>
  <li>mix different types of cards. Consistency helps users anticipate the content and interactions.</li>
  <li>overwhelm users with too many cards in the carousel. Ideally, limit the number of cards to no more than 9 to prevent information overload.</li>
  <li>use if your cards contain important information, as some users might miss it if they donâ€™t interact with the carousel.</li>
</ul>

<p>Ensure that the content displayed in the carousel is relevant, engaging, and adds value to the user experience.</p>

<h3>How this component works</h3>

<h2>Accessibility</h2>
<p>All components are responsive and meet WCAG 2.1 AA accessibility guidelines.</p>

<h3>Markup</h3>

<ul>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
</ul>

<h3>Keyboard Interactions and focus</h3>

<ul>
  <li><code>Tab</code> key moves focus through interactive elements in the carousel. Rotation control, previous slide, and next slide buttons precede the slide content in the <code>Tab</code> sequence.</li>
  <li><code>Shift + Tab</code> keys moves focus to the previous focusable element</li>
  <li><code>Enter</code> , <code>Left Arrow</code> and <code>Right Arrow</code> keys display next or previous slide in the carousel.</li>
</ul>

<h3>Screen Reader Announcement of Slide Changes</h3>
<p>The card carousel slide content is included in a live region. This makes it easier for screen reader users to scan through the carousel slides. When screen reader users activate the next or previous slide button, the new slide content is announced, giving users immediate feedback that helps them determine whether or not to interact with the content.</p>

<h3>ARIA attributes</h3>
<ul>
  <li>The card carousel container has the <code>aria-roledescription</code> property set to carousel.</li>
  <li>Each card container has role <a href="https://w3c.github.io/aria/#group">group</a> with the property <code>aria-roledescription</code> set to slide.</li>
  <li></li>
  <li></li>
</ul>