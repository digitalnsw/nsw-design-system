// Font-size mixin - returns the font size for mobile and desktop based of the values in $font-sizes map
@mixin font-size($size) {
  @if $size != 'xs' and $size != 'sm' and $size != 'md' and $size != 'lg' and $size != 'xl' and $size != 'xxl' and $size != 'xxxl' {
    @error 'NSW-DS font-size mixin allows the following values for $sizes: xs, sm, md, lg, xl, xxl, xxxl. You have used "#{$size}"';
  }

  @if $size {
    font-size: get-font-size($size, 'mobile');
    line-height: get-line-height($size, 'mobile');

    @include breakpoint($font-size-reponsive-breakpoint) {
      font-size: get-font-size($size, 'desktop');
      line-height: get-line-height($size, 'mobile');
    }
  }
}

// Font-stack mixin - returns the font stack also applies specific weighting if heading or not
@mixin font-stack($weight: 'regular') {
  @if $weight != 'regular' and $weight != 'heading' {
    @error 'NSW-DS font-stack mixin allows the following values for $weight: regular, heading. You have used "#{$weight}"';
  }

  font-family: $font-stack;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  @if $weight == 'regular' {
    font-weight: map-get($font-weight, regular);
  } @else if $weight == 'heading' {
    font-weight: map-get($font-weight, heading);
  }
}

// Function to get the font size from $font-sizes map and convert values to rem
@function get-font-size($size, $screen-size: 'mobile') {
  @if $screen-size != 'mobile' and $screen-size != 'desktop' {
    @error 'NSW-DS get-font-size function allows the following values for $screen-size: mobile, desktop';
  }

  $screen-size-value: if($screen-size == 'mobile', 1, 2);

  @each $size-key, $size-value in $font-sizes {
    @if $size-key == $size {
      $font-size: nth($size-value, $screen-size-value);

      @return rem($font-size);
    }
  }
}

// Line-height mixin - returns the line-height from $line-height map
@function get-line-height($size, $screen-size: 'mobile') {
  @if $screen-size != 'mobile' and $screen-size != 'desktop' {
    @error 'NSW-DS get-font-size function allows the following values for $screen-size: mobile, desktop';
  }

  $screen-size-value: if($screen-size == 'mobile', 1, 2);

  @each $size-key, $size-value in $line-height {
    @if $size-key == $size {
      $line-height-value: nth($size-value, $screen-size-value);

      @return $line-height-value;
    }
  }
}

@mixin link() {
  color: $nsw-primary-blue;
  text-decoration: underline;
  text-decoration-skip-ink: auto;

  &:hover {
    @include nsw-hover;
    outline: 2px solid $hover-colour;
  }

  &:focus {
    @include nsw-focus($offset: false);
  }

  &:visited {
    color: $link-visited;
  }

  &:active {
    @include nsw-active;
  }
}
