/* stylelint-disable declaration-no-important, string-quotes */

$nsw-helper-vertical-align: (baseline, top, middle, bottom, text-bottom, text-top);

.nsw-vertical-align {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $vertical-align in $nsw-helper-vertical-align {
        &-#{$breakpoint}-#{$name} {
          vertical-align: $vertical-align !important;
        }
      }
    }
  }
}

$nsw-helper-text-align: (left, right, center);

.nsw-text-align {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $text-align in $nsw-helper-text-align {
        &-#{$breakpoint}-#{$name} {
          text-align: $text-align !important;
        }
      }
    }
  }
}

$nsw-helper-text-decoration: (none, underline, line-through);

.nsw-text-decoration {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $text-decoration in $nsw-helper-text-decoration {
        &-#{$breakpoint}-#{$name} {
          text-decoration: $text-decoration !important;
        }
      }
    }
  }
}

$nsw-helper-text-transform: (lowercase, uppercase, capitalize);

.nsw-text-transform {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $text-transform in $nsw-helper-text-transform {
        &-#{$breakpoint}-#{$name} {
          text-transform: $text-transform !important;
        }
      }
    }
  }
}

$nsw-helper-float: (left, right, none);

.nsw-float {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $float in $nsw-helper-float {
        &-#{$breakpoint}-#{$name} {
          float: $float !important;
        }
      }
    }
  }
}

$nsw-helper-object-fit: (
  contain: contain,
  cover: cover,
  fill: fill,
  scale: scale-down,
  none: none,
);

.nsw-object-fit {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $object-fit in $nsw-helper-object-fit {
        &-#{$breakpoint}-#{$name} {
          object-fit: $object-fit !important;
        }
      }
    }
  }
}

$nsw-helper-overflow: (auto, hidden, visible, scroll);

.nsw-overflow {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $overflow in $nsw-helper-overflow {
        &-#{$breakpoint}-#{$name} {
          overflow: $overflow !important;
        }
      }
    }
  }
}

$nsw-helper-overflow-x: (auto, hidden, visible, scroll);

.nsw-overflow-x {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $overflow-x in $nsw-helper-overflow-x {
        &-#{$breakpoint}-#{$name} {
          overflow-x: $overflow-x !important;
        }
      }
    }
  }
}

$nsw-helper-overflow-y: (auto, hidden, visible, scroll);

.nsw-overflow-y {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $overflow-y in $nsw-helper-overflow-y {
        &-#{$breakpoint}-#{$name} {
          overflow-y: $overflow-y !important;
        }
      }
    }
  }
}

$nsw-helper-position: (static, relative, absolute, fixed, sticky);

.nsw-position {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $position in $nsw-helper-position {
        &-#{$breakpoint}-#{$name} {
          position: $position !important;
        }
      }
    }
  }
}

$nsw-helper-display: (inline, inline-block, block grid, inline-grid, table, table-row, table-cell, flex, inline-flex, none);

.nsw-display {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $display in $nsw-helper-display {
        &-#{$breakpoint}-#{$name} {
          display: $display !important;
        }
      }
    }
  }
}

$nsw-helper-flex-direction: (row, column, row-reverse, column-reverse);

.nsw-flex-direction {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $flex-direction in $nsw-helper-flex-direction {
        &-#{$breakpoint}-#{$name} {
          flex-direction: $flex-direction !important;
        }
      }
    }
  }
}

$nsw-helper-justify-content: (
  start: start,
  end: end,
  flex-start: flex-start,
  flex-end: flex-end,
  center: center,
  left: left,
  right: right,
  stretch: stretch,
  between: space-between,
  around: space-around,
  evenly: space-evenly,
);

.nsw-justify-content {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $justify-content in $nsw-helper-justify-content {
        &-#{$breakpoint}-#{$name} {
          justify-content: $justify-content !important;
        }
      }
    }
  }
}

$nsw-helper-align-items: (
  start: flex-start,
  end: flex-end,
  center: center,
  baseline: baseline,
  stretch: stretch,
);

.nsw-align-items {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $align-items in $nsw-helper-align-items {
        &-#{$breakpoint}-#{$name} {
          align-items: $align-items !important;
        }
      }
    }
  }
}

$nsw-helper-align-self: (
  auto: auto,
  start: flex-start,
  end: flex-end,
  center: center,
  baseline: baseline,
  stretch: stretch,
);

.nsw-align-self {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $align-self in $nsw-helper-align-self {
        &-#{$breakpoint}-#{$name} {
          align-self: $align-self !important;
        }
      }
    }
  }
}

$nsw-helper-flex-wrap: (wrap, nowrap, wrap-reverse);

.nsw-flex-wrap {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $flex-wrap in $nsw-helper-flex-wrap {
        &-#{$breakpoint}-#{$name} {
          flex-wrap: $flex-wrap !important;
        }
      }
    }
  }
}

$nsw-helper-order: (
  first: -1,
  0: 0,
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  last: 6,
);

.nsw-order {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $order in $nsw-helper-order {
        &-#{$breakpoint}-#{$name} {
          order: $order !important;
        }
      }
    }
  }
}

$nsw-helper-align-content: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
  stretch: stretch,
);

.nsw-align-content {
  @each $breakpoint, $breakpoint-size in $nsw-breakpoints {
    @include breakpoint($breakpoint) {
      @each $name, $align-content in $nsw-helper-align-content {
        &-#{$breakpoint}-#{$name} {
          align-content: $align-content !important;
        }
      }
    }
  }
}
